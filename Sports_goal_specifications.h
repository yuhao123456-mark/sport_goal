/*******************************************************************************/
/*  This file is auto-generated by Azure RTOS GUIX Studio. Do not edit this    */
/*  file by hand. Modifications to this file should only be made by running    */
/*  the Azure RTOS GUIX Studio application and re-generating the application   */
/*  specification file(s). For more information please refer to the Azure RTOS */
/*  GUIX Studio User Guide, or visit our web site at azure.com/rtos            */
/*                                                                             */
/*  GUIX Studio Revision 6.0.2.0                                               */
/*  Date (dd.mm.yyyy): 12. 9.2020   Time (hh:mm): 17:15                        */
/*******************************************************************************/


#ifndef _SPORTS_GOAL_SPECIFICATIONS_H_
#define _SPORTS_GOAL_SPECIFICATIONS_H_

#include "gx_api.h"

/* Determine if C++ compiler is being used, if so use standard C.              */
#ifdef __cplusplus
extern   "C" {
#endif

/* Define widget ids                                                           */

#define IDC_MAIN_SET 1
#define IDC_SET_EXIT 2
#define IDC_SET_EXIT1 3
#define IDC_WIDGET_BATTERY 4
#define IDC_SET_AIMS 5
#define IDC_SET_AIMS_DISTANCE 6
#define IDC_SET_AIMS_TIME 7
#define IDC_SET_AIMS_CALORIES 8
#define IDC_SET_TIMING_SWITCH 9
#define IDC_SET_SWITCH 10
#define IDC_CHILD_AIMS 11
#define IDC_AIMS_EXIT 12
#define IDC_AIMS_EXIT1 13
#define IDC_AIMS_BATTERY 14
#define IDC_AIMS_DISTANCE 15
#define IDC_WIDGET_NUM_0 16
#define IDC_WIDGET_NUM_1 17
#define IDC_WIDGET_NUM_2 18
#define IDC_WIDGET_NUM_3 19
#define IDC_WIDGET_NUM_4 20
#define IDC_AIMS_TIME 21
#define IDC_WIDGET_NUM_6 22
#define IDC_WIDGET_NUM_5 23
#define IDC_WIDGET_NUM_7 24
#define IDC_AIMS_KCAL 25
#define IDC_WIDGET_NUM_14 26
#define IDC_WIDGET_NUM_8 27
#define IDC_WIDGET_NUM_9 28
#define IDC_WIDGET_NUM_10 29
#define IDC_WIDGET_NUM_11 30
#define IDC_WIDGET_NUM_12 31
#define IDC_WIDGET_NUM_13 32
#define IDC_CHILD_DISTANCE 33
#define IDC_DISTANCE_EXIT 34
#define IDC_DISTANCE_EXIT1 35
#define IDC_DISTANCE_BATTERY 36
#define IDC_DISTANCE_PLUS 37
#define IDC_DISTANCE_LESS 38
#define IDC_DISTANCE_NUM1 39
#define IDC_DISTANCE_M 40
#define IDC_DISTANCE_NUM2 41
#define IDC_DISTANCE_NUM3 42
#define IDC_DISTANCE_NUM4 43
#define IDC_DISTANCE_NUM5 44
#define IDC_CHILD_TIME 45
#define IDC_TIME_EXIT 46
#define IDC_TIME_EXIT1 47
#define IDC_TIME_BATTERY 48
#define IDC_TIME_PLUS 49
#define IDC_TIME_LESS 50
#define IDC_TIME_HOUR1 51
#define IDC_TIME_HOUR2 52
#define IDC_TIME_COLON 53
#define IDC_TIME_MINTUE1 54
#define IDC_TIME_MINTUE2 55
#define IDC_TIME_FINISH_WIDGET 56
#define IDC_TIME_DURATION 57
#define IDC_CHILD_CALORIES 58
#define IDC_KCAL_EXIT 59
#define IDC_KCAIL_EXIT1 60
#define IDC_KCAL_LESS 61
#define IDC_KCAL_PLUS 62
#define IDC_KCAL_FINISH_WIDGET 63
#define IDC_KCAL_NUM1 64
#define IDC_KCAL_BATTERY 65
#define IDC_KCAL_NUM2 66
#define IDC_KCAL_NUM3 67
#define IDC_KCAL_NUM4 68


/* Define animation ids                                                        */

#define GX_NEXT_ANIMATION_ID 1


/* Define user event ids                                                       */

#define GX_NEXT_USER_EVENT_ID GX_FIRST_USER_EVENT


/* Declare properties structures for each utilized widget type                 */

typedef struct GX_STUDIO_WIDGET_STRUCT
{
   GX_CHAR *widget_name;
   USHORT  widget_type;
   USHORT  widget_id;
   #if defined(GX_WIDGET_USER_DATA)
   INT   user_data;
   #endif
   ULONG style;
   ULONG status;
   ULONG control_block_size;
   GX_RESOURCE_ID normal_fill_color_id;
   GX_RESOURCE_ID selected_fill_color_id;
   GX_RESOURCE_ID disabled_fill_color_id;
   UINT (*create_function) (GX_CONST struct GX_STUDIO_WIDGET_STRUCT *, GX_WIDGET *, GX_WIDGET *);
   void (*draw_function) (GX_WIDGET *);
   UINT (*event_function) (GX_WIDGET *, GX_EVENT *);
   GX_RECTANGLE size;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *next_widget;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *child_widget;
   ULONG control_block_offset;
   GX_CONST void *properties;
} GX_STUDIO_WIDGET;

typedef struct
{
    GX_CONST GX_STUDIO_WIDGET *widget_information;
    GX_WIDGET        *widget;
} GX_STUDIO_WIDGET_ENTRY;

typedef struct
{
    GX_RESOURCE_ID pixelmap_id;
} GX_ICON_BUTTON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID normal_pixelmap_id;
    GX_RESOURCE_ID selected_pixelmap_id;
} GX_ICON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID wallpaper_id;
} GX_WINDOW_PROPERTIES;


/* Declare top-level control blocks                                            */

typedef struct WINDOW_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_WINDOW window_IDC_MAIN_SET;
    GX_ICON_BUTTON window_IDC_SET_EXIT;
    GX_ICON_BUTTON window_IDC_SET_EXIT1;
    GX_ICON window_IDC_WIDGET_BATTERY;
    GX_ICON_BUTTON window_IDC_SET_AIMS;
    GX_ICON window_icon;
    GX_ICON_BUTTON window_IDC_SET_AIMS_DISTANCE;
    GX_ICON window_icon_1;
    GX_ICON_BUTTON window_IDC_SET_AIMS_TIME;
    GX_ICON window_icon_2;
    GX_ICON_BUTTON window_IDC_SET_AIMS_CALORIES;
    GX_ICON window_icon_3;
    GX_ICON window_IDC_SET_TIMING_SWITCH;
    GX_ICON window_icon_5;
    GX_ICON_BUTTON window_IDC_SET_SWITCH;
    GX_WINDOW window_IDC_CHILD_AIMS;
    GX_ICON_BUTTON window_IDC_AIMS_EXIT;
    GX_ICON_BUTTON window_IDC_AIMS_EXIT1;
    GX_ICON window_IDC_AIMS_BATTERY;
    GX_ICON_BUTTON window_IDC_AIMS_DISTANCE;
    GX_ICON window_IDC_WIDGET_NUM_0;
    GX_ICON window_IDC_WIDGET_NUM_1;
    GX_ICON window_IDC_WIDGET_NUM_2;
    GX_ICON window_IDC_WIDGET_NUM_3;
    GX_ICON window_IDC_WIDGET_NUM_4;
    GX_ICON window_icon_6;
    GX_ICON_BUTTON window_IDC_AIMS_TIME;
    GX_ICON window_IDC_WIDGET_NUM_6;
    GX_ICON window_IDC_WIDGET_NUM_5;
    GX_ICON window_IDC_WIDGET_NUM_7;
    GX_ICON window_icon_7;
    GX_ICON_BUTTON window_IDC_AIMS_KCAL;
    GX_ICON window_IDC_WIDGET_NUM_14;
    GX_ICON window_IDC_WIDGET_NUM_8;
    GX_ICON window_IDC_WIDGET_NUM_9;
    GX_ICON window_IDC_WIDGET_NUM_10;
    GX_ICON window_IDC_WIDGET_NUM_11;
    GX_ICON window_IDC_WIDGET_NUM_12;
    GX_ICON window_IDC_WIDGET_NUM_13;
    GX_ICON window_icon_8;
    GX_WINDOW window_IDC_CHILD_DISTANCE;
    GX_ICON_BUTTON window_IDC_DISTANCE_EXIT;
    GX_ICON_BUTTON window_IDC_DISTANCE_EXIT1;
    GX_ICON window_IDC_DISTANCE_BATTERY;
    GX_ICON_BUTTON window_IDC_DISTANCE_PLUS;
    GX_ICON_BUTTON window_IDC_DISTANCE_LESS;
    GX_ICON window_IDC_DISTANCE_NUM1;
    GX_ICON window_IDC_DISTANCE_M;
    GX_ICON_BUTTON window_IDC_DISTANCE_FINISH_WIDGET;
    GX_ICON window_icon_12;
    GX_ICON window_IDC_DISTANCE_NUM2;
    GX_ICON window_IDC_DISTANCE_NUM3;
    GX_ICON window_IDC_DISTANCE_NUM4;
    GX_ICON window_IDC_DISTANCE_NUM5;
    GX_WINDOW window_IDC_CHILD_TIME;
    GX_ICON_BUTTON window_IDC_TIME_EXIT;
    GX_ICON_BUTTON window_IDC_TIME_EXIT1;
    GX_ICON window_IDC_TIME_BATTERY;
    GX_ICON_BUTTON window_IDC_TIME_PLUS;
    GX_ICON_BUTTON window_IDC_TIME_LESS;
    GX_ICON window_IDC_TIME_HOUR1;
    GX_ICON window_IDC_TIME_HOUR2;
    GX_ICON window_IDC_TIME_COLON;
    GX_ICON window_IDC_TIME_MINTUE1;
    GX_ICON window_IDC_TIME_MINTUE2;
    GX_ICON_BUTTON window_IDC_TIME_FINISH_WIDGET;
    GX_ICON window_icon_16;
    GX_ICON window_IDC_TIME_DURATION;
    GX_WINDOW window_IDC_CHILD_CALORIES;
    GX_ICON_BUTTON window_IDC_KCAL_EXIT;
    GX_ICON_BUTTON window_IDC_KCAIL_EXIT1;
    GX_ICON_BUTTON window_IDC_KCAL_LESS;
    GX_ICON_BUTTON window_IDC_KCAL_PLUS;
    GX_ICON window_IDC_WIDGET_KCAL;
    GX_ICON_BUTTON window_IDC_KCAL_FINISH_WIDGET;
    GX_ICON window_IDC_WIDGET_FINISH;
    GX_ICON window_IDC_KCAL_NUM1;
    GX_ICON window_IDC_KCAL_BATTERY;
    GX_ICON window_IDC_KCAL_NUM2;
    GX_ICON window_IDC_KCAL_NUM3;
    GX_ICON window_IDC_KCAL_NUM4;
} WINDOW_CONTROL_BLOCK;


/* extern statically defined control blocks                                    */

#ifndef GUIX_STUDIO_GENERATED_FILE
extern WINDOW_CONTROL_BLOCK window;
#endif

/* Declare event process functions, draw functions, and callback functions     */

UINT SET_EVENT_HANDLER(GX_WINDOW *widget, GX_EVENT *event_ptr);

/* Declare the GX_STUDIO_DISPLAY_INFO structure                                */


typedef struct GX_STUDIO_DISPLAY_INFO_STRUCT 
{
    GX_CONST GX_CHAR *name;
    GX_CONST GX_CHAR *canvas_name;
    GX_CONST GX_THEME **theme_table;
    GX_CONST GX_STRING **language_table;
    USHORT   theme_table_size;
    USHORT   language_table_size;
    UINT     string_table_size;
    UINT     x_resolution;
    UINT     y_resolution;
    GX_DISPLAY *display;
    GX_CANVAS  *canvas;
    GX_WINDOW_ROOT *root_window;
    GX_COLOR   *canvas_memory;
    ULONG      canvas_memory_size;
} GX_STUDIO_DISPLAY_INFO;


/* Declare Studio-generated functions for creating top-level widgets           */

UINT gx_studio_icon_button_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_icon_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_window_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
UINT gx_studio_named_widget_create(char *name, GX_WIDGET *parent, GX_WIDGET **new_widget);
UINT gx_studio_display_configure(USHORT display, UINT (*driver)(GX_DISPLAY *), GX_UBYTE language, USHORT theme, GX_WINDOW_ROOT **return_root);

/* Determine if a C++ compiler is being used.  If so, complete the standard
  C conditional started above.                                                 */
#ifdef __cplusplus
}
#endif

#endif                                       /* sentry                         */
